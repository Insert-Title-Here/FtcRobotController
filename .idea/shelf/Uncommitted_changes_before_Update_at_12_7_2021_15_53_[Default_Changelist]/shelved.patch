Index: TeamCode/src/main/java/teamcode/Competition/Autos/BlueAutoCarousel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package teamcode.Competition.Autos;\r\n\r\nimport android.provider.ContactsContract;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\r\n\r\nimport org.firstinspires.ftc.robotcore.external.hardware.camera.WebcamName;\r\nimport org.openftc.easyopencv.OpenCvCamera;\r\nimport org.openftc.easyopencv.OpenCvCameraFactory;\r\nimport org.openftc.easyopencv.OpenCvCameraRotation;\r\nimport org.openftc.easyopencv.OpenCvWebcam;\r\n\r\nimport teamcode.Competition.Pipeline.CarouselPipeline;\r\nimport teamcode.Competition.Subsystems.ArmSystem;\r\nimport teamcode.Competition.Subsystems.EndgameSystems;\r\nimport teamcode.Competition.Pipeline.BarcodePipeline3;\r\nimport teamcode.common.AbstractOpMode;\r\nimport teamcode.common.Constants;\r\nimport teamcode.common.Localizer;\r\nimport teamcode.common.PositionStuff.Pose;\r\nimport teamcode.common.Utils;\r\nimport teamcode.common.Vector2D;\r\nimport teamcode.common.WestCoastDriveTrain;\r\n\r\n@Autonomous(name=\"CarouselBlue\")\r\npublic class BlueAutoCarousel extends AbstractOpMode {\r\n    WestCoastDriveTrain driveTrain;\r\n    ArmSystem arm;\r\n    EndgameSystems system; //carousel\r\n    Localizer localizer;\r\n\r\n    OpenCvWebcam webcam;\r\n    CarouselPipeline.BarcodePosition position;\r\n\r\n    @Override\r\n    protected void onInitialize() {\r\n        localizer = new Localizer(new Pose(0,0,0), hardwareMap);\r\n        driveTrain = new WestCoastDriveTrain(hardwareMap, localizer);\r\n        system = new EndgameSystems(hardwareMap, true);\r\n        arm = new ArmSystem(hardwareMap, false);\r\n        localizer.lowerOdo();\r\n\r\n        int cameraMonitorViewId = hardwareMap.appContext.getResources().getIdentifier(\"cameraMonitorViewId\", \"id\", hardwareMap.appContext.getPackageName());\r\n        WebcamName wc = hardwareMap.get(WebcamName.class, \"Webcam\");\r\n\r\n        // W/ or W/ out live preview\r\n        webcam = OpenCvCameraFactory.getInstance().createWebcam(wc, cameraMonitorViewId);\r\n        // camera = OpenCvCameraFactory.getInstance().createWebcam(wc);\r\n\r\n        CarouselPipeline pipeline = new CarouselPipeline();\r\n        webcam.setPipeline(pipeline);\r\n\r\n        webcam.openCameraDeviceAsync(new OpenCvCamera.AsyncCameraOpenListener() {\r\n            @Override\r\n            public void onOpened() {\r\n                webcam.startStreaming(320, 240, OpenCvCameraRotation.UPRIGHT); //specify cam orientation and calibrate the resolution\r\n            }\r\n\r\n            @Override\r\n            public void onError(int errorCode) {\r\n                telemetry.addData(\"Camera Init Error\", errorCode);\r\n                telemetry.update();\r\n            }\r\n        });\r\n        while(!opModeIsActive()){\r\n            position = pipeline.getPos();\r\n            //telemetry.addData(\"\", position);\r\n            //telemetry.update();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        webcam.stopStreaming();\r\n        telemetry.clear();\r\n        localizer.start();\r\n\r\n        // bottom\r\n        position = CarouselPipeline.BarcodePosition.RIGHT;\r\n        if (position == CarouselPipeline.BarcodePosition.RIGHT) {\r\n            driveTrain.moveToPosition(new Vector2D(-4, 1), 12, 0.5, false);\r\n            driveTrain.rotateDistance(-0.5, Math.toRadians(25));\r\n            driveTrain.moveToPosition(new Vector2D(-16, -3), 12, 0.5, false);\r\n            driveTrain.rotateDistance(0.5, Math.toRadians(-120));\r\n            driveTrain.moveToPosition(new Vector2D(-15, 1), -12, 0.5, false);\r\n            Utils.sleep(1000);\r\n            arm.raise(Constants.BOTTOM_POSITION);\r\n            Utils.sleep(1000);\r\n            arm.runConveyorPos(1, 2000);\r\n            arm.score();\r\n            arm.retract();\r\n        }\r\n\r\n        while(opModeIsActive());\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        localizer.stopThread();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/teamcode/Competition/Autos/BlueAutoCarousel.java b/TeamCode/src/main/java/teamcode/Competition/Autos/BlueAutoCarousel.java
--- a/TeamCode/src/main/java/teamcode/Competition/Autos/BlueAutoCarousel.java	(revision 9d1bc543917c1ba46084e0dc6548310ad1b0c42a)
+++ b/TeamCode/src/main/java/teamcode/Competition/Autos/BlueAutoCarousel.java	(date 1638606001022)
@@ -92,8 +92,6 @@
         }
 
         while(opModeIsActive());
-
-
     }
 
     @Override
